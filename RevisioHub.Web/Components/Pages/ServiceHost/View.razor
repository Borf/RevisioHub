@page "/ServiceHost/{ServiceHostId:int}"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.SignalR
@using Microsoft.EntityFrameworkCore
@using Microsoft.IdentityModel.Tokens
@using RevisioHub.Common.Models.db
@using RevisioHub.Web.Components.Account.Shared
@using RevisioHub.Web.Model
@using RevisioHub.Web.Model.Db.Services
@using System.Text
@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@using RevisioHub.Web.Services
@inject Context Context;
@inject Configuration configuration;
@inject IHubContext<ClientService> ClientService;


<h4>Service @ServiceHost.Host.Name on @ServiceHost.Host.Name</h4>
Host type
<EditForm Model="ServiceHost" method="post" OnValidSubmit="UpdateServiceHost" FormName="UpdateServiceHost">
<input class="form-control disabled" @bind="@ServiceHost.Host.HostType" />
Working Directory
<input class="form-control" @bind="ServiceHost.WorkingDirectory" />
    <input class="form-control w-100 btn btn-primary" type="submit" value="Update" />
</EditForm>

<h5>Environment variables</h5>
<ul class="list-group">
    @foreach (var variable in ServiceHost.EnvironmentVariables)
    {
        var _variable = variable;
        <li class="list-group-item">
            <EditForm Model="_variable" method="post" OnValidSubmit="UpdateVariable">
                <div class="row">
                    <div class="col-5"><input class="form-control" @bind="_variable.Variable" /></div>
                    <div class="col-5"><input class="form-control" @bind="_variable.Value" /></div>
                    <input class="col-1 btn btn-primary" type="submit" value="Update" />
                    <input class="col-1 btn btn-danger" type="button" value="Delete" @onclick="() => DeleteVariable(_variable)" />
                </div>
            </EditForm>
        </li>
    }
</ul>

<EditForm Model="EnvironmentVariable" method="post" OnValidSubmit="AddVariable">
    <div class="input-group">
        <input class="form-control" @bind="EnvironmentVariable.Variable" placeholder="Variable Name" />
        <input class="form-control" @bind="EnvironmentVariable.Value" placeholder="Variable Value"/>
        <button type="submit" class="btn btn-primary">Add Variable</button>
    </div>
</EditForm>


@code {
    [Parameter]
    public int ServiceHostId { get; set; } = 0;

    public ServiceHost ServiceHost => Context.ServiceHosts.Include(sh => sh.Service).Include(sh => sh.Host).First(s => s.Id == ServiceHostId);

    [SupplyParameterFromForm]
    private EnvironmentVariableModel EnvironmentVariable { get; set; } = new();

    public async Task UpdateServiceHost()
    {
        Context.ServiceHosts.Update(ServiceHost);
        await Context.SaveChangesAsync();
    }


    public async Task UpdateVariable(EditContext editContext)
    {
        var model = editContext.Model as EnvironmentVariable;
        Context.EnvironmentVariables.Update(model!);
        await Context.SaveChangesAsync();
    }

    public async Task DeleteVariable(EnvironmentVariable variable)
    {
        Context.EnvironmentVariables.Remove(variable);
        await Context.SaveChangesAsync();
    }


    public async Task AddVariable(EditContext editContext)
    {
        Context.EnvironmentVariables.Add(new EnvironmentVariable()
        {
            Variable = EnvironmentVariable.Variable,
            Value = EnvironmentVariable.Value,
            ServiceHostId = ServiceHostId
        });
        await Context.SaveChangesAsync();
        EnvironmentVariable = new();
    }

    private sealed class EnvironmentVariableModel
    {
        [Required]
        public string Variable { get; set; } = string.Empty;
        public string Value { get; set; } = string.Empty;
    }
}